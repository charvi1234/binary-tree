#include <math.h>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <assert.h>
#include <limits.h>
#include <stdbool.h>
typedef struct node
{
   int data;
   struct node*left;
   struct node*right;
}node;

struct node * create(struct node*root,int d)
{
    if(root==NULL)
    {
        struct node *nn=(node*)malloc(sizeof(node));
        nn->data=d;
        nn->left=NULL;
        nn->right=NULL;
        return nn;
    }
    else
    {
    if(d>root->data)
    {
        root->right=create(root->right,d);
    }
    else if(d<root->data)
    {
        root->left=create(root->left,d);
    }
    return root;
    }
}

int index;
void preorder(struct node*root,int *a)
{
    if(root==NULL)
        return;
    a[index]=root->data;
    //printf("%d ",a[index]);
    index++;
    preorder(root->left,a);   
    preorder(root->right,a);
}

int main() {
    int no;
    scanf("%d",&no);
    while(no!=0)
    {
        int size,a[100],flag=0,i;
        index = 0;
        scanf("%d",&size);
        int *arr=(int*)malloc(sizeof(int)*size);
        for(i=0;i<size;i++)
        {
            scanf("%d",&arr[i]);
        }
        struct node* head = NULL;
        for(i=0;i<size;i++)
        {
            head = create(head,arr[i]);
        }
        preorder(head,a);
       // for(i=0;i<size;i++)
        //    printf("%d ",a[i]);
        for(i=0;i<size;i++)
        {
            if(a[i]!=arr[i])
            {
                flag=1;
                break;
            }
        }
        if(flag==1)
            printf("NO\n");
        else
            printf("YES\n");
        no--;
    }
    return 0;
}