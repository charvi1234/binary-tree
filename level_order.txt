/**
 * Definition for binary tree
 * class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) {
 *      val = x;
 *      left=null;
 *      right=null;
 *     }
 * }
 */
public class Solution {
    public ArrayList<ArrayList<Integer>> levelOrder(TreeNode A) {
        ArrayList<ArrayList<Integer>> arr = new ArrayList<ArrayList<Integer>>();
        Queue<TreeNode> q = new LinkedList<>();
        q.add(A);
        q.add(null);
        while(q.peek()!=null)
        {
            ArrayList<Integer> ar = new ArrayList<>();
            int size = q.size()-1;
            while(size>0)
            {
                TreeNode t = q.poll();
                ar.add(t.val);
                if(t.left!=null)
                {
                    q.add(t.left);
                }
                if(t.right!=null)
                {
                    q.add(t.right);
                }
                size--;
            }
            arr.add(ar);
            q.poll();
            q.add(null);
        }
        return arr;
    }
}
