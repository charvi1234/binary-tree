/**
 * Definition for binary tree
 * class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) {
 *      val = x;
 *      left=null;
 *      right=null;
 *     }
 * }
 */
 import java.util.Collections;
public class Solution {
    public int arr[] = new int[1000000];
    public ArrayList<ArrayList<Integer>> arl = new ArrayList<ArrayList<Integer>>();
    public void func2(TreeNode root,int sum,int arr[],int len, int B)
    {
        if(root == null)
        return;
        arr[len] = root.val;
        len++;
        sum = sum + root.val;
        if(root.left == null && root.right == null)
        {
            if(sum == B)
            {
              ArrayList <Integer> ar = new ArrayList<>();
              for(int i = 0 ; i < len; i++)
                ar.add(arr[i]);
              arl.add(ar);
            }
        }
        else
        {
        func2(root.left,sum,arr,len,B);
        func2(root.right,sum,arr,len,B);
        }
    }
    public ArrayList<ArrayList<Integer>> pathSum(TreeNode A, int B) 
    {
        func2(A,0,arr,0,B);
        return arl;
    }
}
